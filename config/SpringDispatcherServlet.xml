<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop
                      http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
                      http://www.springframework.org/schema/beans
                      http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
                      http://www.springframework.org/schema/context
                      http://www.springframework.org/schema/context/spring-context-4.2.xsd
                      http://www.springframework.org/schema/mvc
                      http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
                      http://www.springframework.org/schema/util
                      http://www.springframework.org/schema/util/spring-util-4.2.xsd">



	<!-- create controller and controller advice beans by scanning packages -->
	<context:component-scan base-package="com.jobsearch.*" />

	<bean name="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/jsp/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<mvc:resources mapping="/static/javascript/**" location="/static/javascript/" />
	<mvc:resources mapping="/static/css/**" location="/static/css/" />
	<mvc:resources mapping="/static/External/**" location="/static/External/" />


	<!-- enable resolution of ${...} placeholders within @Value annotations
		and in XML definitions -->
	<!-- <context:property-placeholder ignore-unresolvable="false" /> -->

	<!-- enable annotation-driven Spring AOP (i.e. @Aspect, @Pointcut, @Before,
		@After, @Around, etc.) -->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->

	<!-- enable annotation-driven Spring Web MVC (i.e. @RequestMapping, @RequestParam,
		@PathVariable, @RequestBody, @ResponseBody, etc.) -->
	<mvc:annotation-driven
		content-negotiation-manager="contentNegotiationManager">
		<mvc:message-converters register-defaults="false">
			<bean
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter"
				autowire-candidate="false">
			</bean>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter"
				autowire-candidate="false" p:writeAcceptCharset="false">
			</bean>
			<!-- convert @ResponseBody objects with Jackson annotations to JSON -->
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"
				p:supportedMediaTypes="application/json;charset=UTF-8"
				autowire-candidate="false">
				<constructor-arg>
					<bean
						class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean"
						p:modulesToInstall="com.fasterxml.jackson.datatype.joda.JodaModule,
											 com.fasterxml.jackson.datatype.hppc.HppcModule"
						p:serializationInclusion="NON_EMPTY" p:failOnUnknownProperties="true"
						p:autoDetectFields="false" p:autoDetectGettersSetters="false"
						autowire-candidate="false">
					</bean>
				</constructor-arg>
			</bean>
			<!-- convert @ResponseBody objects with JAXB annotations to XML -->
			<bean
				class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"
				p:supportedMediaTypes="text/xml" autowire-candidate="false">
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- enable negotiation of content type based on factors such as request
		headers and request mappings metadata -->
	<bean id="contentNegotiationManager"
		class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
		p:favorPathExtension="false" p:mediaTypes-ref="negotiableMediaTypes">
	</bean>
	<util:properties id="negotiableMediaTypes">
		<prop key="json">application/json</prop>
		<prop key="xml">text/xml</prop>
	</util:properties>

<!-- 	<bean id="multipartResolver" -->
<!-- 		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->

<!-- 		 setting maximum upload size -->
<!-- 		<property name="maxUploadSize" value="100000000" /> -->

<!-- 	</bean> -->

	<import resource="classpath:spring-security.xml" />
	<import resource="classpath:spring-register.xml" />
	<import resource="classpath:spring-file-upload.xml" />
	<import resource="classpath:spring-velocity.xml" />

</beans>
